// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/Feride3d/backup-creator/internal/model"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// ContentProvider is an autogenerated mock type for the ContentProvider type
type ContentProvider struct {
	mock.Mock
}

// GetUpdatedContentBlocks provides a mock function with given fields: ctx, lastRun
func (_m *ContentProvider) GetUpdatedContentBlocks(ctx context.Context, lastRun time.Time) ([]model.ContentBlock, error) {
	ret := _m.Called(ctx, lastRun)

	if len(ret) == 0 {
		panic("no return value specified for GetUpdatedContentBlocks")
	}

	var r0 []model.ContentBlock
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time) ([]model.ContentBlock, error)); ok {
		return rf(ctx, lastRun)
	}
	if rf, ok := ret.Get(0).(func(context.Context, time.Time) []model.ContentBlock); ok {
		r0 = rf(ctx, lastRun)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.ContentBlock)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, time.Time) error); ok {
		r1 = rf(ctx, lastRun)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewContentProvider creates a new instance of ContentProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewContentProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *ContentProvider {
	mock := &ContentProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
